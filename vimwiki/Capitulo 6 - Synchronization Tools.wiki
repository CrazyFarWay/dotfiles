* Cooperating process
* Race condition
* Critical section
* The Critical-Section problem
  - Entry section
  - Exit section
  - Remainder section
  - Solution requirements
    * Mutual exclusion
    * Progress
    * Bounded waiting
  - Preemptive kernels vs nonpreemptive kernels
* Peterson's solution
  - Software-based solution
  - Is restricted to two process that alternate execution of his sections
  - Is not guaranteed to word on modern computer architectures
* Hardware Support for Synchronization
  - Memory model
    * Strongly ordered vs Weakly ordered
  - Memory Barriers or Memory fences
  - Hardware instructions
    * test_and_set()
    * compare_and_swap()
  - Atomic Variables
* Critical-section problem solutions
  - Mutex Locks
    * Lock contention
      - Contended lock
	* High contention vs Low contention
      - Uncontended lock
    * Busy waiting problem
    * Spinlock
    * Usage
      - Prevent race conditions
      - Protect critical sections
      - Mutual exclusion
  - Semaphores
    * Counting semaphore vs Binary semaphore
    * Usage
      - Mutual exclusion
      - Control acces to a given resource
      - Solve synchronization problems
* High-level synchronization constructs
  - Monitors
    * Abstract Data Type (ADT)
    * Condition construct
    * Signal and wait
    * Signal and continue
    * Conditional-wait
      - Priority number
    * Problems
      - A process might access a resource without first gaining access permission to the resource
      - A process might never release a resource once it has been granted access to the resource
      - A process might attempt to release a resource that it never requested
      - A process might request the same resource twice (without first releasing the resource)
* Liveness
  - Deadlocked process state problem
  - Priority inversion problem
    * Priority-inheritance protocol
* Evaluation
  - Lock-free algorithms
  - Optimistic strategy (CAS-based)
  - Pessimistic strategy (Mutual-exclusion locking)
  - CAS-based synchronization vs traditional synchronization
    * Uncontended (CAS-based faster)
    * Moderate contention (CAS-based faster)
    * High contention (Traditional faster)
  - Race condition mechanism choice
       
